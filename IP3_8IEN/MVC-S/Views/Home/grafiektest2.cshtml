@Scripts.Render("~/bundles/kendo")
@Scripts.Render("~/scripts/charts")
<ul>
    <div id="sortable"></div>
</ul>
<script id="tmp" type="text/x-kendo-template">
    @*<li class="sortable">Item #:data#</li>*@

    <div class="col-lg-6 sortable">
        <div class="panel panel-default">
            <div class="panel-heading">
                Chart Example#:data#
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div id="chart#:data#">
                    @*<canvas id="canvas#:data#"></canvas>*@
                </div>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>

</script>
@*
    <script>
        var initialData = [1, 2, 3, 4, 5, 6, 7], //initial items order (used if there is no saved data
            localStorageSupport = (('localStorage' in window && window['localStorage'] !== null)),
            data,
            html;

        if (localStorageSupport) {
            //retrieve local storage data if such is available, else use the default order
            data = JSON.parse(localStorage.getItem("sortableData")) || initialData;
        } else {
            alert("your browser does not support local storage");
            data = initialData;
        }

        html = kendo.render(kendo.template($("#tmp").html()), data); //render the HTML with the data
        $("#sortable").html(html); //append the HTML to the Sortable container

        $("#sortable").kendoSortable({ //initialize the sortable widget
            filter: ".sortable",
            change: function (e) {
                var item = data.splice(e.oldIndex, 1)[0]; //remove the item that has changed its order
                data.splice(e.newIndex, 0, item); //add the item back using the newIndex

                localStorage.setItem("sortableData", kendo.stringify(data)); //set the updated data in the local storage
            }
        });

    </script>






    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/morris/raphael.min.js"></script>
    <script src="~/Scripts/morris/morris.min.js"></script>
    <script src="~/Scripts/morris/morris-chart-settings.min.js"></script>*@

@Scripts.Render("~/bundles/kendo")


<!-- A link to the NodeBox JavaScript API  -->
<script src="https://nodebox.live/api/v1/ndbx.js"></script>
<script src="@Url.Content("~/Scripts/morris-data.js")"></script>
<script>

    var number = @Html.Raw(Json.Encode(ViewBag.NUMMER1));
    console.log(number);
    //document.getElementById("chart7").innerHTML = number;
    //$("#chart7").append("<p>This is a paragraph</p>");

    
</script>

