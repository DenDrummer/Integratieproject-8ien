@model IP3_8IEN.BL.Domain.Dashboard.Dashbord
@Scripts.Render("~/bundles/kendo")
@Scripts.Render("~/scripts/charts")

<link rel="stylesheet" href="~/Content/creategrafiek.css" />
<script src="~/Scripts/kendoUiUpdate.js"></script>
<script src="~/Scripts/morris-scripts.js"></script>

<script src="~/Scripts/grafiekaanmaken.js"></script>
<script type="text/javascript">
    $(function () {
        /** This code runs when everything has been loaded on the page */
        /* Inline sparklines take their values from the contents of the tag */
        $('.inlinesparkline').sparkline();

        /* Sparklines can also take their values from the first argument
        passed to the sparkline() function */
        var myvalues = [10, 8, 5, 7, 4, 4, 1];
        $('.dynamicsparkline').sparkline(myvalues);

        /* The second argument gives options such as chart type */
        $('.dynamicbar').sparkline(myvalues, { type: 'bar', barColor: 'green' });

        /* Use 'html' instead of an array of values to pass options
        to a sparkline with data in the tag */
        $('.inlinebar').sparkline('html', { type: 'bar', barColor: 'red' });
    });
</script>

<p>
    Inline Sparkline: <span class="inlinesparkline">1,4,4,7,5,9,10</span>.
</p>
<p>
    Sparkline with dynamic data: <span class="dynamicsparkline">Loading..</span>
</p>
<p>
    Bar chart with dynamic data: <span class="dynamicbar">Loading..</span>
</p>
<p>
    Bar chart with inline data: <span class="inlinebar">1,3,4,5,3,5</span>
</p>


<button type="button" id="button">load</button>

<ul>
    <div id="sortable"></div>
</ul>
<script id="tmp" type="text/x-kendo-template">
    @*<li class="sortable">Item #:data#</li>*@

    <div class="col-lg-6 sortable">
        <div class="panel panel-default">
            <div class="panel-heading">
                Chart Example#:data#
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <div id="chart#:data#">
                    @*<canvas id="canvas#:data#"></canvas>*@

                </div>
            </div>
            <!-- /.panel-body -->
        </div>
        <!-- /.panel -->
    </div>

</script>

<script>
    var init = @Html.Raw(Json.Encode(ViewBag.INIT));
    var ZonesOrder = "@Model.ZonesOrder";
    var initialData = JSON.parse(init),
            order,
            html;

        if (@Model.ZonesOrder) {
            //retrieve local storage data if such is available, else use the default order
            var temp = JSON.parse("@Model.ZonesOrder");
            var aantalAdmin
            order =  JSON.parse("@Model.ZonesOrder") || initialData;
        } else {
            alert("your Database does not have zones saved");
                order = initialData;
        }

            html = kendo.render(kendo.template($("#tmp").html()), order); //render the HTML with the data
        $("#sortable").html(html); //append the HTML to the Sortable container

        $("#sortable").kendoSortable({ //initialize the sortable widget
            filter: ".sortable",
            change: function (e) {
                    var item = order.splice(e.oldIndex, 1)[0]; //remove the item that has changed its order
                    order.splice(e.newIndex, 0, item); //add the item back using the newIndex
                    //localStorage.setItem("sortableData", kendo.stringify(data)); //set the updated data in the local storage
                    @*@Model.ZonesOrder = kendo.stringify(data);*@
                    updateKendoZones(@Model.DashbordId, kendo.stringify(order));
                    }
    });

    
</script>


@foreach (var t in Model.TileZones)
{

    //var list = t.DashItem.Graphdata;
    int dashItemId = t.DashItem.DashItemId;
    string elementId = "chart" + dashItemId;
    //int kl = 170;
    <script type="text/javascript">
        @*console.log("json string hopefully: " + JSON.stringify(@list1));*@
        @*console.log("json string hopefully: "+@dashItemId);*@
        custChart(@dashItemId,@elementId);
    </script>
   
}

@*
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/morris/raphael.min.js"></script>
    <script src="~/Scripts/morris/morris.min.js"></script>
    <script src="~/Scripts/morris/morris-chart-settings.min.js"></script>*@


<!-- A link to the NodeBox JavaScript API  -->
<script src="https://nodebox.live/api/v1/ndbx.js"></script>
    <script src="@Url.Content("~/Scripts/morris-data.js")"></script>
    <script type="text/javascript">

        var number = @Html.Raw(Json.Encode(ViewBag.NUMMER1));
        var name = @Html.Raw(Json.Encode(ViewBag.NAAM1));
        console.log(number);
        //document.getElementById("chart7").innerHTML = number;
        //$("#chart7").append("<p>This is a paragraph</p>");

        var mydiv = document.getElementById("chart7");
        var mycontent = document.createElement("p");
        mycontent.appendChild(document.createTextNode(name+" heeft: "+number+" tweets"));
        mydiv.appendChild(mycontent);
    </script>



@*
    <!--Get Data for Graph-->
    <script type="text/javascript">
        $(document).ready(function() {
            $.get('@Url.Action("GetData","Home",new {id = 231})', function (result) {

                Morris.Area({
                    // ID of the element in which to draw the chart.
                    element: 'chart4',
                    // Chart data records -- each entry in this array corresponds to a point on
                    // the chart.
                    data: result,
                    // The name of the data record attribute that contains x-values.
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: ['aantal tweets Van Verhofstad'],
                    pointSize: 2,
                    hideHover: 'auto',
                    resize: true
                });
            });




        });
    </script>

    <script type="text/javascript">
        $(document).ready(function() {

            $.get('@Url.Action("GetData","Home",new {id = 170})', function (result) {

                Morris.Line({
                    // ID of the element in which to draw the chart.
                    element: 'chart1',
                    // Chart data records -- each entry in this array corresponds to a point on
                    // the chart.
                    data: result,
                    // The name of the data record attribute that contains x-values.
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: ['aantal tweets van Bart De Wever'],
                    pointSize: 2,
                    hideHover: 'auto',
                    resize: true
                });
            });
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function() {

           $.get('@Url.Action("GetRank","Home",new {aantal = 5})', function (result) {

                Morris.Donut({
                    // ID of the element in which to draw the chart.
                    element: 'chart2',
                    // Chart data records -- each entry in this array corresponds to a point on
                    // the chart.
                    data: result,
                    // The name of the data record attribute that contains x-values.

                    hideHover: 'auto',
                    resize: true
                });
            });
            });
    </script>
    <script type="text/javascript">
        $(document).ready(function() {

           $.get('@Url.Action("GetData2","Home",new {persoon1 = 1, persoon2 = 3, persoon3 = 5, persoon4 = 7, persoon5 = 9})', function (result) {

               Morris.Line({
                    // ID of the element in which to draw the chart.
                    element: 'chart3',
                    // Chart data records -- each entry in this array corresponds to a point on
                    // the chart.
                    data: result,
                    // The name of the data record attribute that contains x-values.
                   xkey: 'label',
                   ykeys: ['value1', 'value2', 'value3', 'value4', 'value5'],
                   labels: ['aantal tweets', 'aantal tweets', 'aantal tweets', 'aantal tweets', 'aantal tweets'],
                   pointSize: 2,
                    hideHover: 'auto',
                    resize: true
                });
            });
            });
    </script>*@